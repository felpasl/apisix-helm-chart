#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "apisix-ingress-controller.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "apisix-ingress-controller.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "apisix-ingress-controller.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap-ingress.yaml") . | sha256sum }}
        {{- if .Values.podAnnotations }}
        {{- range $key, $value := $.Values.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
        {{- end }}
      labels:
        {{- include "apisix-ingress-controller.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.priorityClassName }}
      priorityClassName: {{ . }}
      {{- end }}
      serviceAccountName: {{ include "apisix-ingress-controller.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: configuration-ingress
          configMap:
            name: {{ .Release.Name }}-configmap-ingress
            items:
              - key: config.yaml
                path: config.yaml
        {{- if .Values.config.lightweight }}
        - name: configuration-apisix
          configMap:
            name: {{ .Release.Name }}-configmap-apisix
            items:
              - key: config.yaml
                path: config.yaml
        {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          command:
            - /ingress-apisix/apisix-ingress-controller
            - ingress
            - --config-path
            - /ingress-apisix/conf/config.yaml
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ (.Values.config.httpListen | split ":")._1 }}
              protocol: TCP
            - name: https
              containerPort: {{ (.Values.config.httpsListen | split ":")._1 }}
              protocol: TCP
            - name: etcd
              containerPort: {{ (.Values.config.etcdListen | split ":")._1 }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ (.Values.config.httpListen | split ":")._1 }}
          readinessProbe:
            httpGet:
              path: /healthz
              port: {{ (.Values.config.httpListen | split ":")._1 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /ingress-apisix/conf
              name: configuration-ingress
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
        {{- if .Values.config.lightweight }}
        - name: apisix
          image: "{{ .Values.apisix.image.repository }}:{{ .Values.apisix.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.apisix.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ (.Values.config.httpListen | split ":")._1 }}
              protocol: TCP
            - name: https
              containerPort: {{ (.Values.config.httpsListen | split ":")._1 }}
              protocol: TCP
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 20
            periodSeconds: 2
            successThreshold: 1
            tcpSocket:
              port: {{ .Values.service.http.containerPort }}
            timeoutSeconds: 2
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 15
            periodSeconds: 2
            successThreshold: 1
            tcpSocket:
              port: {{ .Values.service.http.containerPort }}
            timeoutSeconds: 1
          resources:
            {{- toYaml .Values.apisix.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /usr/local/apisix/conf/config.yaml
              subPath: config.yaml
              name: configuration-apisix
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
